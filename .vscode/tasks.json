{
    "tasks": [
        {
            "label": "Syntax Check All Files (GCC)",
            "detail": "Run GCC with -fsyntax-only to perform full syntax checking",
            "type": "shell",
            "command": "gcc",
            "args": [
                "-std=gnu2x",
                "-pedantic",
                "-Wall",
                "-Wextra",
                "-fsyntax-only",
                "-fdiagnostics-color=always",
                "${workspaceRoot}/Back-End/UnitTest.c",
                "${workspaceRoot}/Back-End/linked/*.c",
                "${env:USERPROFILE}/Documents/C/OneDrive/Cryptography/CRC.c",
                "-I${workspaceRoot}/Back-End/includes",
                "-I${env:USERPROFILE}/Documents/C",
                "-I${env:USERPROFILE}/Documents/C/OneDrive"
            ],
            "problemMatcher": ["$gcc"],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "windows gcc build Unit Test",
            "detail": "Build Unit Test",
            "type": "cppbuild",
            "command": "gcc",
            "args": [
                "-std=gnu2x",
                "-pedantic",
                "-Wall",
                "-Wextra",
                // "-O3",
                "-pipe",
                "-flto",
                "-ggdb3",
                // "-g3",
                "-fdiagnostics-color=always",
                "${workspaceRoot}/Back-End/UnitTest.c",
                "${workspaceRoot}/Back-End/linked/*.c",
                "${env:USERPROFILE}/Documents/C/OneDrive/Cryptography/CRC.c",
                "-I${workspaceRoot}/Back-End/includes",
                "-I${env:USERPROFILE}/Documents/C",
                "-I${env:USERPROFILE}/Documents/C/OneDrive",
                "-o",
                "${workspaceRoot}/Back-End/UnitTest.exe"
            ],
            "options": {
                "cwd": "${workspaceRoot}/Back-End"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build"
            }
        },
        {
            "label": "linux gcc build Unit Test",
            "detail": "Build Unit Test",
            "type": "cppbuild",
            "command": "gcc",
            "args": [
                "-std=gnu2x",
                "-pedantic",
                "-Wall",
                "-Wextra",
                "-O3",
                "-pipe",
                "-flto",
                "-ggdb3",
                // "-g3",
                "-fdiagnostics-color=always",
                "${workspaceRoot}/Back-End/UnitTest.c",
                "${workspaceRoot}/Back-End/linked/*.c",
                "/mnt/c/Users/Admin/Documents/C/OneDrive/Cryptography/CRC.c",
                "-I${workspaceRoot}/Back-End/includes",
                "-I/mnt/c/Users/Admin/Documents/C",
                "-I/mnt/c/Users/Admin/Documents/C/OneDrive",
                "-o",
                "${workspaceRoot}/Back-End/UnitTest.exe"
            ],
            "options": {
                "cwd": "${workspaceRoot}/Back-End"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build"
            }
        },
        {
            "label": "run-valgrind-on-binary",
            "type": "shell",
            "command": "valgrind",
            "args": [
                "--leak-check=full",
                "--show-leak-kinds=all",
                "--track-origins=yes",
                "-s",
                "${workspaceRoot}/Back-End/UnitTest.exe"
            ],
            "options": {
                "cwd": "${workspaceRoot}/Back-End"
            },
            "problemMatcher": []
        },
        {
            "label": "build-and-valgrind",
            "dependsOn": [
                "linux gcc build Unit Test",
                "run-valgrind-on-binary"
            ],
            "dependsOrder": "sequence",
            "problemMatcher": []
        },
        {
            "label": "C/C++: clang sanitize build Unit Test",
            "detail": "Builds using Clang with AddressSanitizer",
            "type": "shell",
            "command": "clang",
            "args": [
                "-std=gnu2x",
                "-pedantic",
                "-Wall",
                "-Wextra",
                "-Wconstant-logical-operand",
                "-Wtautological-constant-compare",
                "-Wunreachable-code",
                "-pipe",
                "-g3",
                "-fsanitize=address",
                "-fno-omit-frame-pointer",
                "-fcolor-diagnostics",
                "-fdiagnostics-color=always",
                "${workspaceRoot}/Back-End/UnitTest.c",
                "${workspaceRoot}/Back-End/linked/*.c",
                "${env:USERPROFILE}/Documents/C/OneDrive/Cryptography/CRC.c",
                "-I${workspaceRoot}/Back-End/includes",
                "-I${env:USERPROFILE}/Documents/C",
                "-I${env:USERPROFILE}/Documents/C/OneDrive",
                "-o",
                "${workspaceRoot}/Back-End/UnitTest.exe"
            ],
            "options": {
                "cwd": "${workspaceRoot}/Back-End"
            },
            "group": "build",
            "problemMatcher": ["$gcc"]
        },
        {
            "label": "Build with MinGW Make",
            "type": "shell",
            "command": "mingw32-make",
            "args": [
                "-f",
                "Back-End/MakeFile"
            ],
            "group": {
                "kind": "build"
            },
            "problemMatcher": []
        }
    ],
    "version": "2.0.0"
}